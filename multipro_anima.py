import Draw
import multiprocessing as  mp

def draw_R_static(N1, N2):
    para_static_R = [
                 [-10, 0, 5, 100, 0.2, 0.6, 13, 0], [2, 3, -4, 100, 0.9, 10, 8 / 3, 0],
                 [2, 3, -4, 100, 0.1, 1, 6, 0], [160, 10, 2, 100, 0.7, 2, 5, 0],
                 [1.e-4, 0, 1, 100, 0.9, 10, 8 / 3, 0], [1.e-4, 0, 1, 100, 0.95, 10, 8 / 3, 0],
                 [1.e-4, 0, 1, 100, 1.01, 10, 8 / 3, 0], [1.e-4, 0, 1, 100, 1.2, 10, 8 / 3, 0],
                 [2, 3, -4, 100, 8, 10, 8 / 3, 0], [160, 10, 2, 100, 10, 2, 5, 0],
                 [-10, 0, 0, 100, 13.962, 10, 8 / 3, 0], [0, 0, 10, 100, 13.962, 10, 8 / 3, 0],
                 [3, 6, 8, 100, 15, 10, 8 / 3, 0], [3, 6, 8, 100, 24, 10, 8 / 3, 0],
                 [6.1101, 6.1101+1.e-5, 14, 100, 15, 10, 8 / 3, 0], [7.6594, 7.6594+1.e-5, 23, 100, 24, 10, 8 / 3, 0],
                 [3, 2, 6, 100, 28, 10, 8 / 3, 0], [50, 20, -60, 100, 28, 10, 8 / 3, 0],
                 [8.6, 8.5, 28, 100, 80, 10, 8 / 3, 0], [8.6, 8.6, 28.1, 100, 80, 10, 8 / 3, 0],
                 [8.6, 8.7, 28, 100, 80, 10, 8 / 3, 0], [8.6, 8.6, 28, 100, 80, 10, 8 / 3, 0],
                 [100, 100, 100, 100, 28, 1, 8 / 3, 0], [100, 100, 100, 100, 28, 10, 8 / 3, 0],
                 [1, 1, -1,  100, 470 / 19, 10, 8 / 3,  0], [1, 1, -.95, 100, 470 / 19, 10, 8 / 3, 0],
                 [19.53, 19.53, 143, 100, 144, 10, 8 / 3,  0], [19.53, 19.53, 142,  100, 144, 10, 8 / 3, 0],
                 [7.956, 7.956, 23.737, 100, 24.737, 10, 8 / 3, 0], [7.956, 7.957, 23.737, 100, 24.737, 10, 8 / 3, 0],
                 [1, 1, -1, 100, 167, 10, 8 / 3, 0], [1, 1, -.95, 100, 167, 10, 8 / 3, 0],
    ]


    for i in range(len(para_static_R)):
        para_static_R[i].append("../Project_Videos/tendency/" + str(i) + "all.mp4")

    for i in range(N1, N2):
        Draw.Draw_anima(para_static_R[i][0:8], para_static_R[i][8])

if __name__ == '__main__':
    p1 = mp.Process(target=draw_R_static, args=(0, 8))
    p2 = mp.Process(target=draw_R_static, args=(8, 16))
    p3 = mp.Process(target=draw_R_static, args=(16, 24))
    p4 = mp.Process(target=draw_R_static, args=(24, 32))

    p1.start()
    p2.start()
    p3.start()
    p4.start()
    p1.join()
    p2.join()
    p3.join()
    p4.join()


   # [
                 # 上面两个能不能画到一张图里面
                 
#                 [ 1, 1, -1,100, 144, 10, 8 / 3,  0], [1, 1, -.95,  100, 144, 10, 8 / 3, 0],
 #                [1, 1, -1, 100, 167, 10, 8 / 3, 0], [1, 1, -.95, 100, 167, 10, 8 / 3, 0]'''
    #             [8.6, 8.5, 28, 100, 80, 10, 8 / 3, 0], [8.6, 8.6, 28.1, 100, 80, 10, 8 / 3, 0],
     #            [8.6, 8.7, 28, 100, 80, 10, 8 / 3, 0], [8.6, 8.6, 28, 100, 80, 10, 8 / 3, 0]
      #          ]